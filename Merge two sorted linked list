You are given two sorted singly linked lists, merge them such that the final list is also
sorted.

***************************************************************SOLUTION************************************************************************

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node *next;
};
typedef struct node node;
node *head1=NULL;
node *head2=NULL;


node *createnode(node *head)
{
    node *temp;
    temp=(node *)malloc(sizeof(int));
    if(temp==NULL)
        exit(0);
    printf("\nEnter data element:");
    scanf("%d",&temp->data);
    temp->next=NULL;
    if(head==NULL)
        head=temp;
    else
    {
        node *p=head;
        while(p->next!=NULL)
        {
            p=p->next;
        }
        p->next=temp;
        p=NULL;
        temp=NULL;
    }
    return head;
}

void displaynode(int j,node *head)
{
    printf("\n Displaying the data of list%d",j);
    printf("\n-----------------------------\n");
    node *temp;
    temp=head;
    while(temp->next!=NULL)
    {
        printf("%d-> ",temp->data);
        temp=temp->next;
    }
    printf("%d",temp->data);
}

node *mergelist(node *p,node *q)
{
    node *NewMerge,*s;
    if(p==NULL)
        return q;
    if(q==NULL)
        return p;
    if(p->data <= q->data)
    {
        s=p;
        p=s->next;
    }
    else
    {
        s=q;
        q=s->next;
    }
    NewMerge=s;
    while(p && q)
    {
        if(p->data <= q->data)
        {
            s->next=p;
            s=p;
            p=s->next;
        }
        else
        {
            s->next=q;
            s=q;
            q=s->next;
        }
        if(p==NULL)
            s->next=q;
        if(q==NULL)
            s->next=p;
    }
    return NewMerge;
    
}

void displaynode_merge(node *head)
{
    node *temp;
    temp=head;
    while(temp->next!=NULL)
    {
        printf("%d-> ",temp->data);
        temp=temp->next;
    }
    printf("%d",temp->data);
}

void main()
{
    int total_node,delNode;
    
    //Creating linked lists
    
    for(int j=1;j<=2;j++)
    {
        printf("\nEnter the no of nodes to be inserted list%d:",j);
        scanf("%d",&total_node);
        if(j==1)
        {
            for(int i=0;i<total_node;i++)
            {
                head1=createnode(head1);
            }
            displaynode(j,head1);
        }
        else
        {
            for(int i=0;i<total_node;i++)
            {
                head2=createnode(head2);
            }
            displaynode(j,head2);
        }
    }
    
    //merge both list
    
    node *NewMerge=mergelist(head1,head2);
    printf("\n Displaying the data of merge list");
    printf("\n-----------------------------\n");
    displaynode_merge(NewMerge);
}
